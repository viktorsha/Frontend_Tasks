{"version":3,"sources":["constants/index.js","styles.js","pages/myNotes/MyNotesForm.js","components/Popup.js","pages/myNotes/MyNotes.jsx","pages/myNotes/MyNotesContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["NOTES_COLUMNS","field","headerName","width","NOTES","id","title","description","date","dateFormat","Date","styles","tableGrid","display","justifyContent","cardName","container","saveChangesBtn","marginLeft","descriptionField","font","EditBtn","useStyle","makeStyles","theme","root","margin","spacing","MyNotesForm","onChange","setOpenPopup","activeNote","find","note","initialValues","useState","values","setValues","classes","moment","format","inputValue","setInputValue","handleInputChange","e","target","name","value","className","Grid","item","xs","TextField","variant","label","TextareaAutosize","style","utils","DateFnsUtils","KeyboardButtonProps","Button","color","onClick","Popup","props","children","openPopup","Dialog","open","DialogTitle","height","DialogContent","MyNotes","selectedNote","setNote","changeNote","tableData","rows","columns","pageSize","autoHeight","onRowClick","selectedItem","row","Card","CardContent","Typography","MyNotesContainer","setSelectedNote","setTableData","useEffect","localStorage","setItem","JSON","stringify","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6115db90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nexport const NOTES_COLUMNS = [\r\n    {\r\n        field: \"id\",\r\n        headerName: \"ID\",\r\n        width: 100\r\n    },\r\n    {\r\n        field: \"title\",\r\n        headerName: \"Title\",\r\n        width: 140\r\n    },\r\n    {\r\n        field: \"description\",\r\n        headerName: \"Description\",\r\n        width: 164\r\n    },\r\n    {\r\n        field: \"date\",\r\n        headerName: \"Creation date\",\r\n        width: 120\r\n    },\r\n]\r\n\r\nexport const NOTES = [\r\n    {\r\n        id: 1,\r\n        title: \"JS learning\",\r\n        description: \"JavaScript (often shortened to JS) is a lightweight, interpreted, \" +\r\n            \"object-oriented language with first-class functions, and is best known as the scripting language for Web pages,\" +\r\n            \" but it's used in many non-browser environments as well. \",\r\n        date: dateFormat(new Date(), \"dd.mm.yyyy\")\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"React learning\",\r\n        description: \"React is a library for building composable user interfaces. \" +\r\n            \"It encourages the creation of reusable UI components, which present data that changes over time\",\r\n        date: dateFormat(new Date(), \"dd.mm.yyyy\")\r\n    },\r\n    {\r\n        id: 3,\r\n        title: \"HTML+CSS learning\",\r\n        description: \"HTML (the Hypertext Markup Language) and CSS (Cascading Style Sheets) are two of \" +\r\n            \"the core technologies for building Web pages. HTML provides the structure of the page, CSS the (visual and aural) layout, for a variety of devices.\",\r\n        date:dateFormat(new Date(), \"dd.mm.yyyy\")\r\n    }\r\n]\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nexport const styles = {\r\n    tableGrid: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    cardName: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    container: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    saveChangesBtn: {\r\n        marginLeft: \"7px\"\r\n    },\r\n    descriptionField: {\r\n        marginLeft: \"10px\",\r\n        width: \"300px\",\r\n        font: \"inherit\"\r\n    },\r\n    EditBtn: {\r\n        display: \"flex\"\r\n    }\r\n}\r\nexport const useStyle = makeStyles(theme=> ({\r\n    root: {\r\n        \"& .MuiFormControl-root\": {\r\n            width: \"80%\",\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))","import React, {useState} from \"react\";\r\nimport {Button, Grid, makeStyles, TextareaAutosize, TextField} from \"@material-ui/core\";\r\nimport {MuiPickersUtilsProvider, KeyboardDatePicker} from \"@material-ui/pickers\"\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport moment from \"moment\";\r\nimport {NOTES} from \"../../constants\";\r\nimport {styles, useStyle} from \"../../styles\";\r\n\r\n\r\n\r\nexport default function MyNotesForm({id, onChange, setOpenPopup}) {\r\n    const activeNote = NOTES.find(note => note.id === id);\r\n    const initialValues = {\r\n        id: id,\r\n        title: activeNote.title,\r\n        description: activeNote.description,\r\n        date: activeNote.date\r\n    }\r\n\r\n    const [values, setValues] = useState(initialValues);\r\n    const classes = useStyle();\r\n    const [inputValue, setInputValue] = useState(moment().format(\"dd.MM.yyyy\"));\r\n\r\n    const onDateChange = (date, value) => {\r\n        setInputValue(value);\r\n        setValues({\r\n            ...values,\r\n            [\"date\"]: inputValue\r\n        })\r\n    };\r\n\r\n    const handleInputChange = e => {\r\n        const {name, value} = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n    }\r\n    return(\r\n        <div>\r\n            <form className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <TextField variant={\"outlined\"} label=\"Title\" value={values.title} name=\"title\" onChange={handleInputChange}/>\r\n                        <TextareaAutosize className={\"descriptionField\"} variant={\"outlined\"} label=\"Description\" name=\"description\" value={values.description} style={styles.descriptionField} onChange={handleInputChange}/>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker variant={\"inline\"} format={\"dd.MM.yyyy\"} inputValue={values.date} name=\"date\" onChange={onDateChange} KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}/>\r\n                        </MuiPickersUtilsProvider>\r\n                        <Button variant={\"outlined\"} color={\"primary\"} className={\"saveChangesBtn\"} onClick={()=>{\r\n                            onChange(values)\r\n                            setOpenPopup(false)}}\r\n                        style={styles.saveChangesBtn}>Save changes</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Button, Dialog, DialogContent, DialogTitle} from \"@material-ui/core\";\r\nimport myNotesForm from \"../pages/myNotes/MyNotesForm\";\r\n\r\nexport default function Popup(props) {\r\n    const {title, children, openPopup, setOpenPopup} = props;\r\n    return (\r\n        <Dialog open={openPopup}>\r\n            <DialogTitle>\r\n                <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                    <h4 style={{margin: 0}}>{title}</h4>\r\n                    <Button variant={\"outlined\"} color={\"primary\"} style={{width: \"20px\", height: \"40px\"}} onClick={()=>setOpenPopup(false)}>X</Button>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n        \r\n}","import React from \"react\";\r\nimport {Button, Card, CardContent, Grid, Typography} from \"@material-ui/core\";\r\nimport {DataGrid} from \"@material-ui/data-grid\";\r\nimport {NOTES_COLUMNS} from \"../../constants\";\r\nimport Popup from \"../../components/Popup\"\r\nimport {styles} from \"../../styles\";\r\nimport MyNotesForm from \"./MyNotesForm\"\r\n\r\n\r\nexport const MyNotes = ({selectedNote, setNote, openPopup, setOpenPopup, changeNote, tableData}) => {\r\n    const activeNote = tableData.find(note => note.id === selectedNote);\r\n    return (\r\n        <Grid container spacing={10}>\r\n            <Grid container item xs={6} spacing={3}>\r\n                <DataGrid rows={tableData} columns={NOTES_COLUMNS} pageSize={3} autoHeight={true}\r\n                          onRowClick={(selectedItem) => setNote(selectedItem.row.id)} >\r\n                </DataGrid>\r\n            </Grid>\r\n            <Grid container item xs={6} spacing={3}>\r\n                <Card variant=\"outlined\" style={styles.cardName}>\r\n                    <CardContent>\r\n                        <Typography color=\"textPrimary\" variant={\"h4\"}>\r\n                            {activeNote.title}\r\n                        </Typography>\r\n                        <Typography>\r\n                            {activeNote.description}\r\n                        </Typography>\r\n                        <Typography>\r\n                            <b>{activeNote.date}</b>\r\n                        </Typography>\r\n                        <hr/>\r\n                        {activeNote.title !== \"\" &&\r\n                        <Button className={\"EditBtn\"} variant=\"contained\" color=\"primary\" style={styles.EditBtn}\r\n                                onClick={() => setOpenPopup(true)}>Edit note</Button>}\r\n                    </CardContent>\r\n                </Card>\r\n                <Popup\r\n                    title=\"Edit form\"\r\n                    openPopup={openPopup}\r\n                    setOpenPopup={setOpenPopup}>\r\n                    <MyNotesForm id={activeNote.id} onChange={changeNote} setOpenPopup={setOpenPopup}/>\r\n                </Popup>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {NOTES} from \"../../constants/index\";\r\nimport {MyNotes} from \"./MyNotes\";\r\n\r\nexport const MyNotesContainer = () => {\r\n    const [selectedNote, setSelectedNote] = useState(NOTES[0].id);\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [tableData, setTableData] = useState(NOTES)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"Notes\", JSON.stringify(tableData));\r\n    }, [tableData]);\r\n    const setCurrentNote = (id) => {\r\n        setSelectedNote(id);\r\n    }\r\n    function changeNote(values){\r\n        setTableData(\r\n            tableData.map(note=>{\r\n                if (note.id===values.id)\r\n                {\r\n                    tableData[values.id-1].title=values.title;\r\n                    tableData[values.id-1].description=values.description;\r\n                    tableData[values.id-1].date=values.date;\r\n                }\r\n                return note;\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <MyNotes selectedNote={selectedNote} setNote={setCurrentNote} openPopup={openPopup} setOpenPopup={setOpenPopup} changeNote={changeNote} tableData={tableData}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import './App.css';\r\nimport React from \"react\";\r\nimport {MyNotesContainer} from \"./pages/myNotes/MyNotesContainer\"\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <MyNotesContainer/>\r\n        </div>\r\n    );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}